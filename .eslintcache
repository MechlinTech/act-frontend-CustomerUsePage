[{"E:\\desktop\\work place\\New Project\\atc-frontend-starter-develop\\src\\reportWebVitals.js":"1","E:\\desktop\\work place\\New Project\\atc-frontend-starter-develop\\src\\components\\atoms\\input.js":"2","E:\\desktop\\work place\\New Project\\atc-frontend-starter-develop\\src\\components\\pages\\customersUse.js":"3","E:\\desktop\\work place\\New Project\\atc-frontend-starter-develop\\src\\router.js":"4","E:\\desktop\\work place\\New Project\\atc-frontend-starter-develop\\src\\components\\atoms\\buttons.js":"5","E:\\desktop\\work place\\New Project\\atc-frontend-starter-develop\\src\\components\\pages\\home.js":"6","E:\\desktop\\work place\\New Project\\atc-frontend-starter-develop\\src\\store\\reducers\\customeruseReduser.js":"7","E:\\desktop\\work place\\New Project\\atc-frontend-starter-develop\\src\\index.js":"8","E:\\desktop\\work place\\New Project\\atc-frontend-starter-develop\\src\\store\\store.js":"9","E:\\desktop\\work place\\New Project\\atc-frontend-starter-develop\\src\\components\\pages\\customerSelections.js":"10","E:\\desktop\\work place\\New Project\\atc-frontend-starter-develop\\src\\store\\actions\\customeruseAction.js":"11","E:\\desktop\\work place\\New Project\\atc-frontend-starter-develop\\src\\App.js":"12"},{"size":362,"mtime":1610680934000,"results":"13","hashOfConfig":"14"},{"size":417,"mtime":1610680934000,"results":"15","hashOfConfig":"14"},{"size":13506,"mtime":1610977702613,"results":"16","hashOfConfig":"14"},{"size":730,"mtime":1610964518971,"results":"17","hashOfConfig":"14"},{"size":968,"mtime":1610977808920,"results":"18","hashOfConfig":"14"},{"size":713,"mtime":1610957336000,"results":"19","hashOfConfig":"14"},{"size":540,"mtime":1610974673371,"results":"20","hashOfConfig":"14"},{"size":669,"mtime":1610971210000,"results":"21","hashOfConfig":"14"},{"size":445,"mtime":1610962759238,"results":"22","hashOfConfig":"14"},{"size":1698,"mtime":1610971110000,"results":"23","hashOfConfig":"14"},{"size":186,"mtime":1610968471022,"results":"24","hashOfConfig":"14"},{"size":256,"mtime":1610680934000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1idx983",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\desktop\\work place\\New Project\\atc-frontend-starter-develop\\src\\reportWebVitals.js",[],"E:\\desktop\\work place\\New Project\\atc-frontend-starter-develop\\src\\components\\atoms\\input.js",[],"E:\\desktop\\work place\\New Project\\atc-frontend-starter-develop\\src\\components\\pages\\customersUse.js",["53"],"import React, { useState, useEffect } from 'react'\r\nimport { Container, Row, Col, FormGroup, Label, Input } from 'reactstrap'\r\nimport { Btn2, Btn3 } from '../atoms/buttons'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { setUserSelection } from '../../store/actions/customeruseAction'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n\r\nconst CustomersUse = (props) => {\r\n    const { customer } = props\r\n\r\n    const [Genral, setGenral] = useState([])\r\n    const [CandC, setCandC] = useState([])\r\n    const [Ent, setEnt] = useState([])\r\n    const [OandV, setOandV] = useState([])\r\n\r\n    const ptext = {\r\n        fontSize: \"18px\",\r\n        marginBottom: \"4px\",\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"customer\", customer)\r\n        customer.genral.length > 0 ? setGenral(customer.genral) : setGenral([])\r\n        customer.coock.length > 0 ? setCandC(customer.coock) : setCandC([])\r\n        customer.entertainment.length > 0 ? setEnt(customer.entertainment) : setEnt([])\r\n        customer.outsideview.length > 0 ? setOandV(customer.outsideview) : setOandV([])\r\n\r\n    }, [])\r\n\r\n    const handleGenralCheck = (item) => {\r\n        if (Genral.includes(item)) {\r\n            setGenral(Genral.filter(i => i !== item))\r\n        } else {\r\n            setGenral([...Genral, item])\r\n        }\r\n    }\r\n\r\n    const handleCandC = (item) => {\r\n        if (CandC.includes(item)) {\r\n            setCandC(CandC.filter(i => i !== item))\r\n        } else {\r\n            setCandC([...CandC, item])\r\n        }\r\n    }\r\n\r\n    const HandleEnt = (item) => {\r\n        if (Ent.includes(item)) {\r\n            setEnt(Ent.filter(i => i !== item))\r\n        } else {\r\n            setEnt([...Ent, item])\r\n        }\r\n    }\r\n\r\n    const HandleOandV = (item) => {\r\n        if (OandV.includes(item)) {\r\n            setOandV(OandV.filter(i => i !== item))\r\n        } else {\r\n            setOandV([...OandV, item])\r\n        }\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        let selecteditems = {\r\n            genral: Genral,\r\n            coock: CandC,\r\n            entertainment: Ent,\r\n            outsideview: OandV\r\n        }\r\n        props.dispatch(setUserSelection(selecteditems))\r\n\r\n        setOandV([])\r\n        setGenral([])\r\n        setCandC([])\r\n        setEnt([])\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container style={{ width: \"60%\", height: \"auto\" }}>\r\n                <Row className=\"mb-4\">\r\n                    <h1>What can your customers use at your place?</h1>\r\n                </Row>\r\n                <Row>\r\n                    <Scrollbars autoHide style={{ height: 350 }}>\r\n                        <Container className=\"ml-2 mr-2\">\r\n\r\n                            <Row>\r\n                                <p style={ptext}>What if I don't see a facility I offer?</p>\r\n                                <p>the facilitys listed hear are the ones most searched for by guests. After you complete your registration, you can add more facilities for a larger list in the extrane, the platform you'll use to manage your property</p>\r\n                            </Row>\r\n                            <Row>\r\n                                {/* Genral Coloumn  */}\r\n                                <Col>\r\n                                    <Row>\r\n                                        <p style={ptext}>General</p>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <FormGroup check>\r\n                                            <Label check>\r\n                                                <Input type=\"checkbox\" value=\"Air Conditioning\" onChange={e => handleGenralCheck(e.target.value)} checked={Genral.includes(\"Air Conditioning\")} />{' '}\r\n          Air Conditioning\r\n        </Label>\r\n                                        </FormGroup>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <FormGroup check>\r\n                                            <Label check>\r\n                                                <Input type=\"checkbox\" value=\"Heaating\" onChange={e => handleGenralCheck(e.target.value)} checked={Genral.includes(\"Heaating\")} />{' '}\r\n          Heating\r\n        </Label>\r\n                                        </FormGroup>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <FormGroup check>\r\n                                            <Label check>\r\n                                                <Input type=\"checkbox\" value=\"Free WiFi\" onChange={e => handleGenralCheck(e.target.value)} checked={Genral.includes(\"Free WiFi\")} />{' '}\r\n          Free WiFi\r\n        </Label>\r\n                                        </FormGroup>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <FormGroup check>\r\n                                            <Label check>\r\n                                                <Input type=\"checkbox\" value=\"Free on-site parking\" onChange={e => handleGenralCheck(e.target.value)} checked={Genral.includes(\"Free on-site parking\")} />{' '}\r\n          Free on-site parking\r\n        </Label>\r\n                                        </FormGroup>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <FormGroup check>\r\n                                            <Label check>\r\n                                                <Input type=\"checkbox\" value=\"Electric vehical charging station\" onChange={e => handleGenralCheck(e.target.value)} checked={Genral.includes(\"Electric vehical charging station\")} />{' '}\r\n          Electric vehical charging station\r\n        </Label>\r\n                                        </FormGroup>\r\n                                    </Row>\r\n                                </Col>\r\n\r\n                                <Col>\r\n                                    { /* Cooking and cleaning coloumn */}\r\n                                    <Row>\r\n                                        <p style={ptext} >Cooking and cleaning</p>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <FormGroup check>\r\n                                            <Label check>\r\n                                                <Input type=\"checkbox\" value=\"Kitchen\" onChange={e => handleCandC(e.target.value)} checked={CandC.includes(\"Kitchen\")} />{' '}\r\n          Kitchen\r\n        </Label>\r\n                                        </FormGroup>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <FormGroup check>\r\n                                            <Label check>\r\n                                                <Input type=\"checkbox\" value=\"Kitchenette\" onChange={e => handleCandC(e.target.value)} checked={CandC.includes(\"Kitchenette\")} />{' '}\r\n          kitchenette\r\n        </Label>\r\n                                        </FormGroup>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <FormGroup check>\r\n                                            <Label check>\r\n                                                <Input type=\"checkbox\" value=\"Washing mechine\" onChange={e => handleCandC(e.target.value)} checked={CandC.includes(\"Washing mechine\")} />{' '}\r\n          Washing mechine\r\n        </Label>\r\n                                        </FormGroup>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row><hr />\r\n                            <Row>\r\n                                <Col>\r\n                                    {/*  Entertainment coloumn  */}\r\n                                    <Row>\r\n                                        <p style={ptext} >Entertainment</p>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <FormGroup check>\r\n                                            <Label check>\r\n                                                <Input type=\"checkbox\" value=\"flat-screen TV\" onChange={e => HandleEnt(e.target.value)} checked={Ent.includes(\"flat-screen TV\")} />{' '}\r\n          flat-screen TV\r\n        </Label>\r\n                                        </FormGroup>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <FormGroup check>\r\n                                            <Label check>\r\n                                                <Input type=\"checkbox\" value=\"Swimming pool\" onChange={e => HandleEnt(e.target.value)} checked={Ent.includes(\"Swimming pool\")} />{' '}\r\n          Swimming pool\r\n        </Label>\r\n                                        </FormGroup>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <FormGroup check>\r\n                                            <Label check>\r\n                                                <Input type=\"checkbox\" value=\"Hot Tub\" onChange={e => HandleEnt(e.target.value)} checked={Ent.includes(\"Hot Tub\")} />{' '}\r\n          Hot Tub\r\n        </Label>\r\n                                        </FormGroup>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <FormGroup check>\r\n                                            <Label check>\r\n                                                <Input type=\"checkbox\" value=\"Minibar\" onChange={e => HandleEnt(e.target.value)} checked={Ent.includes(\"Minibar\")} />{' '}\r\n          Minibar\r\n        </Label>\r\n                                        </FormGroup>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <FormGroup check>\r\n                                            <Label check>\r\n                                                <Input type=\"checkbox\" value=\"Sauna\" onChange={e => HandleEnt(e.target.value)} checked={Ent.includes(\"Sauna\")} />{' '}\r\n          Sauna\r\n        </Label>\r\n                                        </FormGroup>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col>\r\n                                    {/* Outside and View coloumn */}\r\n                                    <Row><p style={ptext}>Outside and View</p></Row>\r\n                                    <Row>\r\n                                        <FormGroup check>\r\n                                            <Label check>\r\n                                                <Input type=\"checkbox\" value=\"Balcony\" onChange={e => HandleOandV(e.target.value)} checked={OandV.includes(\"Balcony\")} />{' '}\r\n          Balcony\r\n        </Label>\r\n                                        </FormGroup>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <FormGroup check>\r\n                                            <Label check>\r\n                                                <Input type=\"checkbox\" value=\"Garden view\" onChange={e => HandleOandV(e.target.value)} checked={OandV.includes(\"Garden view\")} />{' '}\r\n          Garden view\r\n        </Label>\r\n                                        </FormGroup>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <FormGroup check>\r\n                                            <Label check>\r\n                                                <Input type=\"checkbox\" value=\"Terrace\" onChange={e => HandleOandV(e.target.value)} checked={OandV.includes(\"Terrace\")} />{' '}\r\n          Terrace\r\n        </Label>\r\n                                        </FormGroup>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <FormGroup check>\r\n                                            <Label check>\r\n                                                <Input type=\"checkbox\" value=\"view\" onChange={e => HandleOandV(e.target.value)} checked={OandV.includes(\"view\")} />{' '}\r\n          View\r\n        </Label>\r\n                                        </FormGroup>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row >\r\n\r\n                        </Container>\r\n                    </Scrollbars>\r\n                </Row>\r\n                <Row className=\"mt-4 mb-2\">\r\n                    <Col xs={3}>\r\n                        <Link to='/customerselections'> < div onClick={() => handleUpdate()} > <Btn2 text=\"Update Calender & Continue\" /> </div></Link>\r\n                    </Col>\r\n                    <Col>\r\n                        <Link to='/'><Btn3 text=\"Cancel\" /></Link>\r\n                    </Col>\r\n                    <Col>\r\n                        <Btn3 icon text=\"Help\" > </Btn3>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    customer: state.customerUse.selectedItem\r\n})\r\n\r\nexport default connect(mapStateToProps)(CustomersUse)",["54","55"],"E:\\desktop\\work place\\New Project\\atc-frontend-starter-develop\\src\\router.js",[],"E:\\desktop\\work place\\New Project\\atc-frontend-starter-develop\\src\\components\\atoms\\buttons.js",[],"E:\\desktop\\work place\\New Project\\atc-frontend-starter-develop\\src\\components\\pages\\home.js",[],"E:\\desktop\\work place\\New Project\\atc-frontend-starter-develop\\src\\store\\reducers\\customeruseReduser.js",["56","57"],"import { CUSTOMER_USE_SELECTION } from '../actions/customeruseAction'\r\n\r\nconst initialstate = {\r\n    selectedItem: {\r\n        genral: [],\r\n        coock: [],\r\n        entertainment: [],\r\n        outsideview: []\r\n    }\r\n}\r\n\r\nexport const customeruseReduser = (state = initialstate, action) => {\r\n    switch (action.type) {\r\n        case CUSTOMER_USE_SELECTION: {\r\n            return {\r\n                ...state,\r\n                selectedItem: action.payload\r\n            }\r\n        } break\r\n        default: { return { ...state } }\r\n    }\r\n}","E:\\desktop\\work place\\New Project\\atc-frontend-starter-develop\\src\\index.js",[],"E:\\desktop\\work place\\New Project\\atc-frontend-starter-develop\\src\\store\\store.js",[],"E:\\desktop\\work place\\New Project\\atc-frontend-starter-develop\\src\\components\\pages\\customerSelections.js",[],"E:\\desktop\\work place\\New Project\\atc-frontend-starter-develop\\src\\store\\actions\\customeruseAction.js",[],"E:\\desktop\\work place\\New Project\\atc-frontend-starter-develop\\src\\App.js",[],{"ruleId":"58","severity":1,"message":"59","line":30,"column":8,"nodeType":"60","endLine":30,"endColumn":10,"suggestions":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":14,"column":38,"nodeType":"68","messageId":"69","endLine":19,"endColumn":10},{"ruleId":"70","severity":1,"message":"71","line":19,"column":11,"nodeType":"72","messageId":"73","endLine":19,"endColumn":16},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'customer'. Either include it or remove the dependency array.","ArrayExpression",["74"],"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unreachable","Unreachable code.","BreakStatement","unreachableCode",{"desc":"77","fix":"78"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [customer]",{"range":"79","text":"80"},[1130,1132],"[customer]"]